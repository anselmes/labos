#!/bin/bash
# SPDX-License-Identifier: GPL-3.0

set -euo pipefail

DIR="$(dirname $(realpath $(dirname $0)))"
export KUBECONFIG="${DIR}/hack/kubeconfig.yaml"

export IPADDR="${1:-127.0.0.1}"
export SSHKEY="${2:-~/.ssh_rsa}"

# generate config
yq '.spec.k0s.config = load("config.yaml") | .spec.hosts[].ssh.address = env(IPADDR) | .spec.hosts[].ssh.keyPath = env(SSHKEY) | del(.spec.hosts[].installFlags)' cl.yaml |
  tee /tmp/cl.yaml |
  sed '/#/d'

# create cluster
k0sctl apply --config /tmp/cl.yaml

# get kubeconfig
k0sctl kubeconfig --config /tmp/cl.yaml > "${KUBECONFIG}"

# apply crds
grep -q gateway <(kubectl get crd) ||
  kustomize build https://github.com/kubernetes-sigs/gateway-api/config/crd/experimental | kubectl apply -f -
grep -q snapshot <(kubectl get crd) ||
  kustomize build https://github.com/kubernetes-csi/external-snapshotter/client/config/crd | kubectl apply -f -

# apply manifests
while [[ -z $(helm ls -n cicd | grep flux) ]]; do
  echo "charts not ready"
  helm ls -A
  sleep 5
done
kustomize build "${DIR}/hack" | kubectl apply -f -

# get lb
CIDR="$(yq 'select(.metadata.name == "default-ip-pool")|.spec.blocks[].cidr' lb.yaml)"
VIP="$(yq 'select(.metadata.name == "default-ip-pool")|.spec.blocks[].cidr' lb.yaml | cut -d '/' -f 1 | sed 's/.$/1/')"
sudo route -n add -net "${CIDR}" "${IPADDR}"

echo """
Cluster is ready:
- CIDR=${CIDR}
- VIP=${VIP}
"""
